\relax 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\citation{Donald2013,Chiang2011,Hsi-Wen2012,Diller2013,Jing2013,Ou2013,Lanauze2013}
\citation{Becker2013f,Becker2014,Becker2014a}
\citation{Becker2013f}
\citation{Becker2014a}
\citation{Becker2014}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {I-A}Model}{1}{subsection.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces   The half adder shown above requires two copies of $\mathbf  {A}$ and $\mathbf  {B}$. }}{1}{figure.1}}
\newlabel{fig:HalfAdder}{{1}{1}{The half adder shown above requires two copies of $\mathbf {A}$ and $\mathbf {B}$}{figure.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {I-B}Dual Rail Logic and Fan-out Gates}{1}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {I-C}Contributions}{1}{subsection.1.3}}
\citation{McCourtney1999}
\citation{Adamatzky2012}
\citation{Fredkin1982ConservativeLogic}
\citation{berlekamp2001winning}
\citation{Adamatzky2002}
\citation{hearn2005complexity}
\citation{Demaine2009}
\@writefile{toc}{\contentsline {section}{\numberline {II}Related Work}{2}{section.2}}
\newlabel{sec:RelatedWork}{{II}{2}{Related Work\relax }{section.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {II-A}Collision-based computing}{2}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {II-B}Sliding-block puzzles}{2}{subsection.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Theory}{2}{section.3}}
\newlabel{sec:theory}{{III}{2}{Theory\relax }{section.3}{}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {III-.0.a}Definition of hit}{2}{paragraph.3.0.0.1}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {III-.0.b}Definition of path}{2}{paragraph.3.0.0.2}}
\newlabel{lemma:changeInHitsNeededToChangePath}{{1}{2}{Definition of path\relax }{theorem.1}{}}
\newlabel{thm:AdditionalRobotsCannotPreventAnOccupation}{{2}{2}{Definition of path\relax }{theorem.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces {\sc  fan-out} operation. This cannot be implemented with 1$\times $1 particles and obstacles. Our technique uses 2$\times $1 particles. }}{3}{table.1}}
\newlabel{tab:Fanout}{{I}{3}{{\sc fan-out} operation. This cannot be implemented with 1$\times $1 particles and obstacles. Our technique uses 2$\times $1 particles}{table.1}{}}
\newlabel{thm:TwoRobotsTwoGoalsImpliesOneRobotOneGoal}{{4}{3}{Definition of path\relax }{theorem.4}{}}
\newlabel{cor:No1x1FanOut}{{5}{3}{Definition of path\relax }{theorem.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Possible Boolean operations in dual-rail particle logic.}}{3}{table.2}}
\newlabel{tab:dualRailParticleLogic}{{II}{3}{Possible Boolean operations in dual-rail particle logic}{table.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Device and gate design}{3}{section.4}}
\newlabel{sec:Design}{{IV}{3}{Device and gate design\relax }{section.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-A}Choosing a clock signal}{3}{subsection.4.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces   A single input, two-output {\sc  fan-out} gate. This gate requires a dual-rail input, a supply particle, and a $2\times 1$ slider. The \emph  {clockwise} control sequence $\langle d,l,u,r \rangle $ duplicates the dual-rail input. }}{4}{figure.2}}
\newlabel{fig:Fanout}{{2}{4}{A single input, two-output {\sc fan-out} gate. This gate requires a dual-rail input, a supply particle, and a $2\times 1$ slider. The \emph {clockwise} control sequence $\langle d,l,u,r \rangle $ duplicates the dual-rail input}{figure.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-B}A {\sc  fan-out} gate}{4}{subsection.4.2}}
\newlabel{sec:FanOut}{{IV-B}{4}{A {\sc fan-out} gate\relax }{subsection.4.2}{}}
\newlabel{subsec:Storage}{{IV-C}{4}{Data Storage\relax }{subsection.4.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-C}Data Storage}{4}{subsection.4.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  The {\sc  fan-out} gate can drive multiple outputs. Here a single input drives four-outputs. This gate requires a dual-rail input, three supply particles, and a $2\times 1$ slider. The \emph  {clockwise} control sequence $\langle d,l,u,r \rangle $ quadruples the dual-rail input. }}{4}{figure.3}}
\newlabel{fig:Fanout4}{{3}{4}{The {\sc fan-out} gate can drive multiple outputs. Here a single input drives four-outputs. This gate requires a dual-rail input, three supply particles, and a $2\times 1$ slider. The \emph {clockwise} control sequence $\langle d,l,u,r \rangle $ quadruples the dual-rail input}{figure.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {III}{\ignorespaces A single-bit data storage latch with state $Q$. }}{4}{table.3}}
\newlabel{tab:memoryTruthTable}{{III}{4}{A single-bit data storage latch with state $Q$}{table.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-D}A binary counter}{4}{subsection.4.4}}
\newlabel{sec:binaryCounter}{{IV-D}{4}{A binary counter\relax }{subsection.4.4}{}}
\newlabel{fig:CounterShowingEachStage}{{IV-D}{4}{A binary counter\relax }{subsection.4.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-E}Scaling issues}{4}{subsection.4.5}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {IV-E.0.c}gates}{4}{paragraph.4.5.0.3}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {IV-E.0.d}particles}{4}{paragraph.4.5.0.4}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {IV-E.0.e} propagation delay}{4}{paragraph.4.5.0.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces   A flip-flop memory. This device has three inputs, \emph  {Read}, \emph  {Set}, \emph  {Clear}, a state variable (shown in blue), and a $2\times 1$ slider. Depending on which input is active, the control sequence $\langle d,l,d,r \rangle $ will read, set, or clear the memory. }}{5}{figure.4}}
\newlabel{fig:Memory}{{4}{5}{A flip-flop memory. This device has three inputs, \emph {Read}, \emph {Set}, \emph {Clear}, a state variable (shown in blue), and a $2\times 1$ slider. Depending on which input is active, the control sequence $\langle d,l,d,r \rangle $ will read, set, or clear the memory}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces   A three-bit counter implemented with particles. The counter requires three {\sc  fan-out} gates, two summers, and one carry. Six $1\times 1$ particles and three $2\times 1$ particles are used. The counter has three levels of gates actuated by CW sequence $\langle d,l,u,r \rangle $ and requires three interconnection sequences $\langle d,l,u,r \rangle $, for a total of 24 moves. }}{5}{figure.5}}
\newlabel{fig:Counter}{{5}{5}{A three-bit counter implemented with particles. The counter requires three {\sc fan-out} gates, two summers, and one carry. Six $1\times 1$ particles and three $2\times 1$ particles are used. The counter has three levels of gates actuated by CW sequence $\langle d,l,u,r \rangle $ and requires three interconnection sequences $\langle d,l,u,r \rangle $, for a total of 24 moves}{figure.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces   Gate-level diagram for an $n$-bit counter. The counter requires $n-1$ {\sc  xor} gates, $n-2$ {\sc  and} gates, and 1 {\sc  not} gate. }}{5}{figure.6}}
\newlabel{fig:CounterBlockDiagram}{{6}{5}{Gate-level diagram for an $n$-bit counter. The counter requires $n-1$ {\sc xor} gates, $n-2$ {\sc and} gates, and 1 {\sc not} gate}{figure.6}{}}
\citation{Becker2013f,Becker2014,Becker2014a}
\bibstyle{IEEEtran}
\bibdata{IEEEabrv,../../../svn/ensemble/bib/aaronrefs}
\bibcite{Donald2013}{1}
\bibcite{Chiang2011}{2}
\bibcite{Hsi-Wen2012}{3}
\bibcite{Diller2013}{4}
\bibcite{Jing2013}{5}
\bibcite{Ou2013}{6}
\bibcite{Lanauze2013}{7}
\bibcite{Becker2013f}{8}
\bibcite{Becker2014}{9}
\bibcite{Becker2014a}{10}
\bibcite{McCourtney1999}{11}
\bibcite{Adamatzky2012}{12}
\bibcite{Fredkin1982ConservativeLogic}{13}
\bibcite{berlekamp2001winning}{14}
\bibcite{Adamatzky2002}{15}
\bibcite{hearn2005complexity}{16}
\bibcite{Demaine2009}{17}
\@writefile{toc}{\contentsline {subsection}{\numberline {IV-F}Optimal Wiring schemes}{6}{subsection.4.6}}
\newlabel{sec:wiring}{{IV-F}{6}{Optimal Wiring schemes\relax }{subsection.4.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Conclusion}{6}{section.5}}
\newlabel{sec:Conclusion}{{V}{6}{Conclusion\relax }{section.5}{}}
\@writefile{toc}{\contentsline {section}{References}{6}{section*.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces   Ending configuration for each stage of the computation. }}{7}{figure.7}}
\newlabel{fig:CounterShowingEachStage}{{7}{7}{Ending configuration for each stage of the computation}{figure.7}{}}
